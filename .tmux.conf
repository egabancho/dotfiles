# act like GNU screen
unbind C-b
set -g prefix C-a

# pass through a Ctrl-a if you press it twice
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# look good
set -g default-terminal "screen-256color"

# set terminal name as session name
set-option -g set-titles on
set-option -g set-titles-string '#S'

# make delay minimal
set -sg escape-time 0

# Sroll history limit
set -g history-limit 100000

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# this will renumber windows automatically when one gets deleted
set-option -g renumber-windows on

# Mouse
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# copy and paster
set-option -g default-command "reattach-to-user-namespace -l bash"

# Copy mode
setw -g mode-keys vi
bind ` copy-mode
unbind [
bind v paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Splitting panes
bind | split-window -h
bind - split-window -v

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# This tmux statusbar config was created by tmuxline.vim
# on Sat, 02 Aug 2014

set -g status-bg "colour236"
set -g message-command-fg "colour255"
set -g status-justify "centre"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour74"
set -g message-bg "colour74"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour255"
set -g message-command-bg "colour74"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour59"
set -g status-left-attr "none"
setw -g window-status-fg "colour74"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour236"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour255"
setw -g window-status-separator ""
setw -g window-status-bg "colour236"
set -g status-left "#[fg=colour59,bg=colour74] #S #[fg=colour74,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour74,bg=colour236] #(whoami) #[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour74,bg=colour236] #(date) #[fg=colour74,bg=colour236,nobold,nounderscore,noitalics]#[fg=colour59,bg=colour74] #H "
setw -g window-status-format "#[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]#[default] #I #W #[fg=colour236,bg=colour236,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour236,bg=colour74,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour74,bold] #I #W #[fg=colour74,bg=colour236,nobold,nounderscore,noitalics]"
